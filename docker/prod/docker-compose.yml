networks:
  loki:

services:
  backend:
    container_name: backend
    build:
      context: ../../
      dockerfile: docker/prod/Dockerfile.backend
    volumes: 
      - ../../logs:/backend:ro

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../certbot/conf:/etc/letsencrypt/:ro
      - ../../certbot/www:/var/www/certbot/:ro
      - ../../frontend/build:/usr/share/nginx/html:ro
      - ../../frontend/src/game:/game:ro
    depends_on:
      - backend

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - ../../certbot/www/:/var/www/certbot/:rw
      - ../../certbot/conf/:/etc/letsencrypt/:rw

  loki:
    container_name: Loki
    image: grafana/loki
    volumes:
      - /root/AV-converter/docker/prod/loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - loki

  promtail:
    container_name: Promtail
    image: grafana/promtail
    volumes:
      - /var/log:/var/log
      - /root/AV-converter/docker/prod/promtail:/etc/promtail
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - loki

  grafana:
    container_name: Grafana
    image: grafana/grafana:latest
    user: "0"
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - loki
